# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# profile zsh startup, run cmd `zprof > out.txt` in cmdline
# zmodload zsh/zprof

# measure shell startup time
if [ -z "$STARTUP_TIME" ]; then
  export STARTUP_TIME=$(date +%s%3N)
fi

# regenerate compinit cache only once a day
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
zstyle ':omz:update' frequency 3

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# nvm lazy startup since it slows down shell start terribly
# zstyle 'omz:plugins:nvm' lazy yes

# commands that will trigger nvm lazy load
# zstyle ':omz:plugins:nvm' lazy-cmd eslint prettier typescript

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  zsh-syntax-highlighting
  zsh-vi-mode
  git 
  gitignore
  gh
  # docker 
  # docker-compose 
  # npm
  # nvm
  # fzf 
  # dotenv
  # emoji
)

export ZSH="$HOME/.oh-my-zsh"

source $ZSH/oh-my-zsh.sh

## Keybinds
bindkey '^H' backward-kill-word

HISTFILE=~/.zhistory
HISTSIZE=10000
SAVEHIST=10000

export LS_OPTIONS='--color=auto'

## ,Aliases

### Coreutils
alias ls='ls -lh --time-style=+"" $LS_OPTIONS'
alias cat='bat'
alias cp='cp -i'        # Confirm before overwriting something
alias df='df -h'        # Human-readable sizes
alias free='free -m'    # Show sizes in MB
alias rm='rm -iv'
alias lsg='ls -lah | rg'

alias h='history -10'
alias hi='history -25'
alias his='history -50'
alias hist='history -100 | less'
alias hg='history | rg'

### Distro-specific
alias zrd='sudo zypper ref && sudo zypper dup'
alias zr='sudo zypper ref'

### Git
alias g='git_status_wrapper'

function git_status_wrapper() {
  if [ $# -eq 0 ]; then
    git status
  else
    git "$@"
  fi
}

# alias gcam='git commit -am'
# alias gcm='git commit -m'
# alias gitst='git status -s'
# alias gitstat='git status'
# alias gitl='git log --all --decorate --graph --oneline'
# alias gitds='git diff --staged'
# alias gitpf='git push --force-with-lease'
# alias gita='git add'

function grbi() {
  if [ -z "$1" ]; then
    echo "Please provide the number of commits to interactively rebase."
    return 1
  fi

  git rebase -i HEAD~$1
}

function ghprcr() {
  if [ -z "$1" ]; then
    echo "Please provide a title for the pull request."
    return 1
  fi

  current_branch=$(git rev-parse --abbrev-ref HEAD)
  gh pr create --base master --head "$current_branch" --title "$1"
}

function gcob() {
  if [ -z "$1" ]; then
    echo "Please provide a name for the branch."
    return 1
  fi

  git checkout -b kbaron/"$1"
}

### Rust
alias rrepl='evcxr'
alias car='cargo'
alias carrq='RUSTFLAGS="-A warnings" cargo run'  # unfortunately rebuilds packages
alias cart1='cargo test -- --test-threads=1'

### Misc / One-off tool-related
alias sshk='kitty +kitten ssh'
alias ard='arduino-cli'
alias cz='chezmoi'
alias cza='chezmoi apply'
alias czez='chezmoi edit ~/.zshrc'
alias czeg='chezmoi edit ~/.gitconfig'
alias czen='chezmoi edit ~/.config/nvim/init.lua'
alias czek='chezmoi edit ~/.config/kitty/kitty.conf'
alias ez='exec zsh' # aka zsh way of doing source bashrc

# paste clipboard to
alias pct='xclip -selection primary -o >'

### workspace parallels
alias jps='just -f /home/kenny/spaces/work/pastorstays-workspace/justfile'


## File and Dir colors for ls and other outputs
eval "$(dircolors -b)"

## Theming section
## compinit: zsh completions
## colors: colored shell output
## zcalc: cmd line calc
#Handled by OMZ
# autoload -U compinit colors zcalc
# compinit -d
# colors

autoload -U zcalc

### Color man pages
export LESS_TERMCAP_mb=$'\E[01;32m'
export LESS_TERMCAP_md=$'\E[01;32m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;47;34m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;36m'
export LESS=-R

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export ZYPP_MEDIANETWORK=1

# default nvm load
# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# ####### lazy load nvm/node/npm, respective programs loaded on first invocation instead of at shell startup
nvm() {
unset -f nvm
export NVM_DIR=~/.nvm
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
nvm "$@"
}

node() {
  unset -f node
  export NVM_DIR=~/.nvm
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
  node "$@"
}

npm() {
  unset -f npm
  export NVM_DIR=~/.nvm
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
  npm "$@"
}

# setopt auto_cd
export CDPATH=:~/spaces/projects/:~/spaces/education/:~/spaces/projects/work/:~/spaces/code-exercises/:$CDPATH

function mkdirgo() {
  mkdir -p "$@" && cd "$@"
}

if [ -n "$STARTUP_TIME" ]; then
  echo $(expr $(date +%s%3N) - $STARTUP_TIME)'ms'
  unset STARTUP_TIME
fi
